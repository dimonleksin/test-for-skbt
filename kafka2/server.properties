broker.id=2
num.network.threads=3

num.io.threads=8

socket.send.buffer.bytes=102400

socket.receive.buffer.bytes=102400

socket.request.max.bytes=104857600

log.dirs=/opt/kafka/data

num.partitions=1

num.recovery.threads.per.data.dir=1

offsets.topic.replication.factor=3
transaction.state.log.replication.factor=1
transaction.state.log.min.isr=1

log.flush.interval.messages=10000

log.retention.hours=168

log.retention.check.interval.ms=300000

zookeeper.connect=192.168.1.71:2181

# Timeout in ms for connecting to zookeeper
zookeeper.connection.timeout.ms=18000

group.initial.rebalance.delay.ms=0
advertised.listeners=PLAINTEXT://192.168.0.197:9093
listeners=PLAINTEXT://:9093
# advertised.listeners=SASL_PLAINTEXT://192.168.1.71:9093
# listeners=SASL_PLAINTEXT://:9093
# sasl.enabled.mechanisms=SCRAM-SHA-256
# sasl.mechanism.inter.broker.protocol=SCRAM-SHA-256
# security.inter.broker.protocol=SASL_PLAINTEXT
# # sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="admin" password="123456";
# # authorizer.class.name=kafka.security.auth.SimpleAclAuthorizer
# allow.everyone.if.no.acl.found=true
# # security.inter.broker.protocol=SASL_PLAINTEXT
# # sasl.mechanism.inter.broker.protocol=PLAIN
# # sasl.enabled.mechanisms=PLAIN
# super.users=User:admin
# listener.name.sasl_plaintext.scram-sha-256.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="admin" password="123456";
# #AUTHORIZER
# authorizer.class.name=kafka.security.authorizer.AclAuthorizer
# allow.everyone.if.no.acl.found=true
